{"ast":null,"code":"var _jsxFileName = \"/Users/dbrainy/dev/politick/src/AddressForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport statesData from './statesData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddressForm({\n  onSubmit\n}) {\n  _s();\n  const [formData, setFormData] = useState({\n    streetAddress: '',\n    city: '',\n    state: '',\n    zipCode: ''\n  });\n  const handleAddressChange = event => {\n    const value = event.target.value;\n    const inputName = event.target.name;\n    setFormData({\n      ...formData,\n      [inputName]: value\n    });\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(formData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleAddressChange,\n      required: true,\n      placeholder: \"Street address\",\n      type: \"text\",\n      id: \"streetAddress\",\n      name: \"streetAddress\",\n      className: \"form-control my-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleAddressChange,\n      required: true,\n      placeholder: \"City\",\n      type: \"text\",\n      id: \"city\",\n      name: \"city\",\n      className: \"form-control my-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"stateDropdown\",\n        onChange: handleAddressChange,\n        className: \"form-control my-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Select State --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), statesData.map(state => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: state.code,\n          children: state.name\n        }, state.code, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleAddressChange,\n      required: true,\n      placeholder: \"Zip code\",\n      type: \"text\",\n      id: \"zipCode\",\n      name: \"zipCode\",\n      className: \"form-control my-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary my-2\",\n      children: \"Find My Rep\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(AddressForm, \"NlE4VHut01eZFOSR7r5Uwlpg5FU=\");\n_c = AddressForm;\nexport default AddressForm;\nvar _c;\n$RefreshReg$(_c, \"AddressForm\");","map":{"version":3,"names":["useState","statesData","jsxDEV","_jsxDEV","AddressForm","onSubmit","_s","formData","setFormData","streetAddress","city","state","zipCode","handleAddressChange","event","value","target","inputName","name","handleSubmit","preventDefault","children","onChange","required","placeholder","type","id","className","fileName","_jsxFileName","lineNumber","columnNumber","map","code","_c","$RefreshReg$"],"sources":["/Users/dbrainy/dev/politick/src/AddressForm.js"],"sourcesContent":["import { useState } from 'react';\nimport statesData from './statesData';\n\nfunction AddressForm({ onSubmit }) {\n    const [formData, setFormData] = useState({\n        streetAddress: '',\n        city: '',\n        state: '',\n        zipCode: '',\n    });\n\n    const handleAddressChange = (event) => {\n        const value = event.target.value;\n        const inputName = event.target.name;\n        setFormData({\n            ...formData,\n            [inputName]: value\n        });\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        onSubmit(formData);\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input onChange={handleAddressChange} required placeholder='Street address' type='text' id='streetAddress' name='streetAddress' className='form-control my-2' />\n            <input onChange={handleAddressChange} required placeholder='City' type='text' id='city' name='city' className='form-control my-2' />\n            <div>\n                <select id=\"stateDropdown\" onChange={handleAddressChange} className='form-control my-2'>\n                    <option value=\"\">-- Select State --</option>\n                    {statesData.map((state) => (\n                        <option key={state.code} value={state.code}>\n                            {state.name}\n                        </option>\n                    ))}\n                </select>\n            </div>\n            <input onChange={handleAddressChange} required placeholder='Zip code' type='text' id='zipCode' name='zipCode' className='form-control my-2' />\n            <button className=\"btn btn-primary my-2\">Find My Rep</button>\n        </form>\n    );\n}\n\nexport default AddressForm;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,WAAWA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IACrCS,aAAa,EAAE,EAAE;IACjBC,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE;EACb,CAAC,CAAC;EAEF,MAAMC,mBAAmB,GAAIC,KAAK,IAAK;IACnC,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACD,KAAK;IAChC,MAAME,SAAS,GAAGH,KAAK,CAACE,MAAM,CAACE,IAAI;IACnCV,WAAW,CAAC;MACR,GAAGD,QAAQ;MACX,CAACU,SAAS,GAAGF;IACjB,CAAC,CAAC;EACN,CAAC;EAED,MAAMI,YAAY,GAAIL,KAAK,IAAK;IAC5BA,KAAK,CAACM,cAAc,CAAC,CAAC;IACtBf,QAAQ,CAACE,QAAQ,CAAC;EACtB,CAAC;EAED,oBACIJ,OAAA;IAAME,QAAQ,EAAEc,YAAa;IAAAE,QAAA,gBACzBlB,OAAA;MAAOmB,QAAQ,EAAET,mBAAoB;MAACU,QAAQ;MAACC,WAAW,EAAC,gBAAgB;MAACC,IAAI,EAAC,MAAM;MAACC,EAAE,EAAC,eAAe;MAACR,IAAI,EAAC,eAAe;MAACS,SAAS,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChK5B,OAAA;MAAOmB,QAAQ,EAAET,mBAAoB;MAACU,QAAQ;MAACC,WAAW,EAAC,MAAM;MAACC,IAAI,EAAC,MAAM;MAACC,EAAE,EAAC,MAAM;MAACR,IAAI,EAAC,MAAM;MAACS,SAAS,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpI5B,OAAA;MAAAkB,QAAA,eACIlB,OAAA;QAAQuB,EAAE,EAAC,eAAe;QAACJ,QAAQ,EAAET,mBAAoB;QAACc,SAAS,EAAC,mBAAmB;QAAAN,QAAA,gBACnFlB,OAAA;UAAQY,KAAK,EAAC,EAAE;UAAAM,QAAA,EAAC;QAAkB;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC3C9B,UAAU,CAAC+B,GAAG,CAAErB,KAAK,iBAClBR,OAAA;UAAyBY,KAAK,EAAEJ,KAAK,CAACsB,IAAK;UAAAZ,QAAA,EACtCV,KAAK,CAACO;QAAI,GADFP,KAAK,CAACsB,IAAI;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEf,CACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eACN5B,OAAA;MAAOmB,QAAQ,EAAET,mBAAoB;MAACU,QAAQ;MAACC,WAAW,EAAC,UAAU;MAACC,IAAI,EAAC,MAAM;MAACC,EAAE,EAAC,SAAS;MAACR,IAAI,EAAC,SAAS;MAACS,SAAS,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9I5B,OAAA;MAAQwB,SAAS,EAAC,sBAAsB;MAAAN,QAAA,EAAC;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEf;AAACzB,EAAA,CAxCQF,WAAW;AAAA8B,EAAA,GAAX9B,WAAW;AA0CpB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}