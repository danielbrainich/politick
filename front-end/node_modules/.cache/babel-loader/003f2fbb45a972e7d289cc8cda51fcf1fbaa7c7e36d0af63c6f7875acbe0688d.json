{"ast":null,"code":"var _jsxFileName = \"/Users/dbrainy/dev/politick/src/GetOfficialsByAddressForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { getCivicInfoOfficialsByAddress, getOpenSecretsCandidateIds, getOpenSecretCandidatesInfo } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction GetOfficialsByAddressForm() {\n  _s();\n  const [representative, setRepresentative] = useState({});\n  const [senator1, setSenator1] = useState({});\n  const [senator2, setSenator2] = useState({});\n  const [officialsIds, setOfficialsIds] = useState({});\n  const [formData, setFormData] = useState({\n    zipCode: ''\n  });\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const data = await getCivicInfoOfficialsByAddress(formData.zipCode);\n    setRepresentative(data.representative);\n    setSenator1(data.senator1);\n    setSenator2(data.senator2);\n    const ids = await getOpenSecretsCandidateIds(data.state, data.representative.name, data.senator1.name, data.senator2.name);\n    setOfficialsIds(ids);\n    const representativeContribData = getOpenSecretCandidatesInfo(officialsIds.representative.cid);\n    // const senator1ContribData = getOpenSecretCandidatesInfo(officialsIds.senator1.cid);\n    // const senator2ContribData = getOpenSecretCandidatesInfo(officialsIds.senator2.cid);\n    console.log(representativeContribData);\n    // console.log(senator1ContribData);\n    console.log(senator2ContribData);\n  };\n  const handleZipCodeChange = event => {\n    const value = event.target.value;\n    const inputName = event.target.name;\n    setFormData({\n      ...formData,\n      [inputName]: value\n    });\n  };\n  console.log('Officials IDs:', officialsIds);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Enter your zip code:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleZipCodeChange,\n        required: true,\n        placeholder: \"Zip code\",\n        type: \"number\",\n        id: \"zipCode\",\n        name: \"zipCode\",\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Representative: \", representative.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Senators: \", senator1.name, \" and \", senator2.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(GetOfficialsByAddressForm, \"NxF1McLo4ebCQT6OJAljE6eYOiE=\");\n_c = GetOfficialsByAddressForm;\n;\nexport default GetOfficialsByAddressForm;\nvar _c;\n$RefreshReg$(_c, \"GetOfficialsByAddressForm\");","map":{"version":3,"names":["useState","getCivicInfoOfficialsByAddress","getOpenSecretsCandidateIds","getOpenSecretCandidatesInfo","jsxDEV","_jsxDEV","Fragment","_Fragment","GetOfficialsByAddressForm","_s","representative","setRepresentative","senator1","setSenator1","senator2","setSenator2","officialsIds","setOfficialsIds","formData","setFormData","zipCode","handleSubmit","event","preventDefault","data","ids","state","name","representativeContribData","cid","console","log","senator2ContribData","handleZipCodeChange","value","target","inputName","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","required","placeholder","type","id","className","_c","$RefreshReg$"],"sources":["/Users/dbrainy/dev/politick/src/GetOfficialsByAddressForm.js"],"sourcesContent":["import { useState } from 'react';\nimport { getCivicInfoOfficialsByAddress, getOpenSecretsCandidateIds, getOpenSecretCandidatesInfo } from './api'\n\nfunction GetOfficialsByAddressForm() {\n\n    const [representative, setRepresentative] = useState({});\n    const [senator1, setSenator1] = useState({});\n    const [senator2, setSenator2] = useState({});\n    const [officialsIds, setOfficialsIds] = useState({});\n    const [formData, setFormData] = useState({\n        zipCode: '',\n    });\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        const data = await getCivicInfoOfficialsByAddress(formData.zipCode);\n        setRepresentative(data.representative);\n        setSenator1(data.senator1);\n        setSenator2(data.senator2);\n\n        const ids = await getOpenSecretsCandidateIds(\n            data.state,\n            data.representative.name,\n            data.senator1.name,\n            data.senator2.name\n        );\n        setOfficialsIds(ids);\n\n        const representativeContribData = getOpenSecretCandidatesInfo(officialsIds.representative.cid);\n        // const senator1ContribData = getOpenSecretCandidatesInfo(officialsIds.senator1.cid);\n        // const senator2ContribData = getOpenSecretCandidatesInfo(officialsIds.senator2.cid);\n        console.log(representativeContribData);\n        // console.log(senator1ContribData);\n        console.log(senator2ContribData);\n    };\n\n    const handleZipCodeChange = (event) => {\n        const value = event.target.value;\n        const inputName = event.target.name;\n        setFormData({\n            ...formData,\n            [inputName]: value\n        });\n    }\n\n    console.log('Officials IDs:', officialsIds);\n\n    return (\n        <>\n            <p>Enter your zip code:</p>\n            <form onSubmit={handleSubmit}>\n                <input onChange={handleZipCodeChange} required placeholder='Zip code' type='number' id='zipCode' name='zipCode' className='form-control' />\n                <button className=\"btn btn-primary\">Submit</button>\n            </form>\n            <ul>\n                <li>Representative: {representative.name}</li>\n                <li>Senators: {senator1.name} and {senator2.name}</li>\n            </ul>\n        </>\n    );\n};\n\nexport default GetOfficialsByAddressForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}