{"ast":null,"code":"var _jsxFileName = \"/Users/dbrainy/dev/politick/src/GetRepByAddressForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { getCivicInfoRepByAddress, getOpenSecretsRepId, getOpenSecretCandidatesInfo } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction GetRepByAddressForm() {\n  _s();\n  const [representative, setRepresentative] = useState({});\n  const [repOpenSecretsId, setRepOpenSecretsId] = useState({});\n  const [repContribData, setRepContribData] = useState({});\n  const [formData, setFormData] = useState({\n    zipCode: ''\n  });\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const repData = await getCivicInfoRepByAddress(formData.zipCode);\n    setRepresentative(repData.representative);\n    const repId = await getOpenSecretsRepId(repData.state, repData.representative.name);\n    setRepOpenSecretsId(repId);\n    const contribData = await getOpenSecretCandidatesInfo(repId);\n    setRepContribData(contribData);\n  };\n  const handleZipCodeChange = event => {\n    const value = event.target.value;\n    const inputName = event.target.name;\n    setFormData({\n      ...formData,\n      [inputName]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Enter your zip code:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleZipCodeChange,\n        required: true,\n        placeholder: \"Zip code\",\n        type: \"number\",\n        id: \"zipCode\",\n        name: \"zipCode\",\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Representative: \", representative.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Top Contributor: \", repContribData.contributors]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(GetRepByAddressForm, \"0kpnCKjOMuINE+pOL7BykyrPZKs=\");\n_c = GetRepByAddressForm;\n;\nexport default GetRepByAddressForm;\nvar _c;\n$RefreshReg$(_c, \"GetRepByAddressForm\");","map":{"version":3,"names":["useState","getCivicInfoRepByAddress","getOpenSecretsRepId","getOpenSecretCandidatesInfo","jsxDEV","_jsxDEV","Fragment","_Fragment","GetRepByAddressForm","_s","representative","setRepresentative","repOpenSecretsId","setRepOpenSecretsId","repContribData","setRepContribData","formData","setFormData","zipCode","handleSubmit","event","preventDefault","repData","repId","state","name","contribData","handleZipCodeChange","value","target","inputName","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","required","placeholder","type","id","className","contributors","_c","$RefreshReg$"],"sources":["/Users/dbrainy/dev/politick/src/GetRepByAddressForm.js"],"sourcesContent":["import { useState } from 'react';\nimport { getCivicInfoRepByAddress, getOpenSecretsRepId, getOpenSecretCandidatesInfo } from './api'\n\nfunction GetRepByAddressForm() {\n\n    const [representative, setRepresentative] = useState({});\n    const [repOpenSecretsId, setRepOpenSecretsId] = useState({});\n    const [repContribData, setRepContribData] = useState({});\n    const [formData, setFormData] = useState({\n        zipCode: '',\n    });\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        const repData = await getCivicInfoRepByAddress(formData.zipCode);\n        setRepresentative(repData.representative);\n\n        const repId = await getOpenSecretsRepId(repData.state, repData.representative.name);\n        setRepOpenSecretsId(repId)\n\n        const contribData = await getOpenSecretCandidatesInfo(repId);\n        setRepContribData(contribData);\n    }\n\n    const handleZipCodeChange = (event) => {\n        const value = event.target.value;\n        const inputName = event.target.name;\n        setFormData({\n            ...formData,\n            [inputName]: value\n        });\n    }\n\n    return (\n        <>\n            <p>Enter your zip code:</p>\n            <form onSubmit={handleSubmit}>\n                <input onChange={handleZipCodeChange} required placeholder='Zip code' type='number' id='zipCode' name='zipCode' className='form-control' />\n                <button className=\"btn btn-primary\">Submit</button>\n            </form>\n            <ul>\n                <li>Representative: {representative.name}</li>\n                <li>Top Contributor: {repContribData.contributors}</li>\n            </ul>\n        </>\n    );\n};\n\nexport default GetRepByAddressForm;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,wBAAwB,EAAEC,mBAAmB,EAAEC,2BAA2B,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElG,SAASC,mBAAmBA,CAAA,EAAG;EAAAC,EAAA;EAE3B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxD,MAAM,CAACY,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxD,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC;IACrCkB,OAAO,EAAE;EACb,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAG,MAAOC,KAAK,IAAK;IAClCA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,MAAMC,OAAO,GAAG,MAAMrB,wBAAwB,CAACe,QAAQ,CAACE,OAAO,CAAC;IAChEP,iBAAiB,CAACW,OAAO,CAACZ,cAAc,CAAC;IAEzC,MAAMa,KAAK,GAAG,MAAMrB,mBAAmB,CAACoB,OAAO,CAACE,KAAK,EAAEF,OAAO,CAACZ,cAAc,CAACe,IAAI,CAAC;IACnFZ,mBAAmB,CAACU,KAAK,CAAC;IAE1B,MAAMG,WAAW,GAAG,MAAMvB,2BAA2B,CAACoB,KAAK,CAAC;IAC5DR,iBAAiB,CAACW,WAAW,CAAC;EAClC,CAAC;EAED,MAAMC,mBAAmB,GAAIP,KAAK,IAAK;IACnC,MAAMQ,KAAK,GAAGR,KAAK,CAACS,MAAM,CAACD,KAAK;IAChC,MAAME,SAAS,GAAGV,KAAK,CAACS,MAAM,CAACJ,IAAI;IACnCR,WAAW,CAAC;MACR,GAAGD,QAAQ;MACX,CAACc,SAAS,GAAGF;IACjB,CAAC,CAAC;EACN,CAAC;EAED,oBACIvB,OAAA,CAAAE,SAAA;IAAAwB,QAAA,gBACI1B,OAAA;MAAA0B,QAAA,EAAG;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC3B9B,OAAA;MAAM+B,QAAQ,EAAEjB,YAAa;MAAAY,QAAA,gBACzB1B,OAAA;QAAOgC,QAAQ,EAAEV,mBAAoB;QAACW,QAAQ;QAACC,WAAW,EAAC,UAAU;QAACC,IAAI,EAAC,QAAQ;QAACC,EAAE,EAAC,SAAS;QAAChB,IAAI,EAAC,SAAS;QAACiB,SAAS,EAAC;MAAc;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3I9B,OAAA;QAAQqC,SAAS,EAAC,iBAAiB;QAAAX,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACP9B,OAAA;MAAA0B,QAAA,gBACI1B,OAAA;QAAA0B,QAAA,GAAI,kBAAgB,EAACrB,cAAc,CAACe,IAAI;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9C9B,OAAA;QAAA0B,QAAA,GAAI,mBAAiB,EAACjB,cAAc,CAAC6B,YAAY;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC;EAAA,eACP,CAAC;AAEX;AAAC1B,EAAA,CA5CQD,mBAAmB;AAAAoC,EAAA,GAAnBpC,mBAAmB;AA4C3B;AAED,eAAeA,mBAAmB;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}