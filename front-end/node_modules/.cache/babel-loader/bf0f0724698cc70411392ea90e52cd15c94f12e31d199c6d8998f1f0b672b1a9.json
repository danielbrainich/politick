{"ast":null,"code":"var _jsxFileName = \"/Users/dbrainy/dev/politick/src/GetRepByAddressForm.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { getCivicInfoRepByAddress, getOpenSecretsRepId, getOpenSecretCandidatesInfo } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GetRepByAddressForm() {\n  _s();\n  const [representative, setRepresentative] = useState({});\n  const [repOpenSecretsId, setRepOpenSecretsId] = useState({});\n  const [repContribData, setRepContribData] = useState({});\n  const [formData, setFormData] = useState({\n    zipCode: ''\n  });\n  useEffect(() => {\n    // Log repContribData whenever it changes\n    console.log('repContribData:', repContribData.response.contributors['@attributes'].cand_name);\n    rep['@attributes'].firstlast;\n  }, [repContribData]); // Dependency array ensures the effect runs only when repContribData changes\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const repData = await getCivicInfoRepByAddress(formData.zipCode);\n    setRepresentative(repData.representative);\n    const repId = await getOpenSecretsRepId(repData.state, repData.representative.name);\n    setRepOpenSecretsId(repId);\n    const contribData = await getOpenSecretCandidatesInfo(repId);\n    setRepContribData(contribData);\n  };\n  const handleZipCodeChange = event => {\n    const value = event.target.value;\n    const inputName = event.target.name;\n    setFormData({\n      ...formData,\n      [inputName]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enter your zip code:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleZipCodeChange,\n            required: true,\n            placeholder: \"Zip code\",\n            type: \"number\",\n            id: \"zipCode\",\n            name: \"zipCode\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Representative: \", representative.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 13\n  }, this);\n}\n_s(GetRepByAddressForm, \"9RrCNQs3wDB+JG+91PvIf95zO4o=\");\n_c = GetRepByAddressForm;\n;\nexport default GetRepByAddressForm;\nvar _c;\n$RefreshReg$(_c, \"GetRepByAddressForm\");","map":{"version":3,"names":["useState","useEffect","getCivicInfoRepByAddress","getOpenSecretsRepId","getOpenSecretCandidatesInfo","jsxDEV","_jsxDEV","GetRepByAddressForm","_s","representative","setRepresentative","repOpenSecretsId","setRepOpenSecretsId","repContribData","setRepContribData","formData","setFormData","zipCode","console","log","response","contributors","cand_name","rep","firstlast","handleSubmit","event","preventDefault","repData","repId","state","name","contribData","handleZipCodeChange","value","target","inputName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","required","placeholder","type","id","_c","$RefreshReg$"],"sources":["/Users/dbrainy/dev/politick/src/GetRepByAddressForm.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { getCivicInfoRepByAddress, getOpenSecretsRepId, getOpenSecretCandidatesInfo } from './api'\n\nfunction GetRepByAddressForm() {\n\n    const [representative, setRepresentative] = useState({});\n    const [repOpenSecretsId, setRepOpenSecretsId] = useState({});\n    const [repContribData, setRepContribData] = useState({});\n    const [formData, setFormData] = useState({\n        zipCode: '',\n    });\n\n\n    useEffect(() => {\n        // Log repContribData whenever it changes\n        console.log('repContribData:', repContribData.response.contributors['@attributes'].cand_name);\n        rep['@attributes'].firstlast\n    }, [repContribData]); // Dependency array ensures the effect runs only when repContribData changes\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        const repData = await getCivicInfoRepByAddress(formData.zipCode);\n        setRepresentative(repData.representative);\n\n        const repId = await getOpenSecretsRepId(repData.state, repData.representative.name);\n        setRepOpenSecretsId(repId)\n\n        const contribData = await getOpenSecretCandidatesInfo(repId);\n        setRepContribData(contribData);\n    }\n\n    const handleZipCodeChange = (event) => {\n        const value = event.target.value;\n        const inputName = event.target.name;\n        setFormData({\n            ...formData,\n            [inputName]: value\n        });\n    }\n\n    return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <p>Enter your zip code:</p>\n                        <form onSubmit={handleSubmit}>\n                            <input onChange={handleZipCodeChange} required placeholder='Zip code' type='number' id='zipCode' name='zipCode' className='form-control' />\n                            <button className=\"btn btn-primary\">Submit</button>\n                        </form>\n                        <ul>\n                            <li>Representative: {representative.name}</li>\n                            {/* <li>Contributors: {repContribData.response}</li> */}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n    );\n};\n\nexport default GetRepByAddressForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}