{"ast":null,"code":"var _jsxFileName = \"/Users/dbrainy/dev/politick/src/GetOfficialsByAddressForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { getCivicInfoOfficialsByAddress, getOpenSecretsCandidateIds } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction GetOfficialsByAddressForm() {\n  _s();\n  const [representative, setRepresentative] = useState({});\n  const [senator1, setSenator1] = useState({});\n  const [senator2, setSenator2] = useState({});\n  const [representativeId, setRepresentativeId] = useState({});\n  const [officialsState, setOfficialsState] = useState({});\n  const [senator1Id, setSenator1Id] = useState({});\n  const [senator2Id, setSenator2Id] = useState({});\n  const [formData, setFormData] = useState({\n    zipCode: ''\n  });\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const data = await getCivicInfoOfficialsByAddress(formData.zipCode);\n    setRepresentative(data.representative);\n    setSenator1(data.senator1);\n    setSenator2(data.senator2);\n    set(data.normalizedInput.state);\n    console.log(data);\n    const officialsIds = await getOpenSecretsCandidateIds('CA', representative.name, senator1.name, senator2.name);\n    setRepresentativeOpenSecretsId(data.RepresentativeOpenSecretsId);\n    setSenator1OpenSecretsId(data.Senator1OpenSecretsId);\n    setSenator2OpenSecretsId(data.Senator2OpenSecretsId);\n  };\n  const handleZipCodeChange = event => {\n    const value = event.target.value;\n    const inputName = event.target.name;\n    setFormData({\n      ...formData,\n      [inputName]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Enter your zip code:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleZipCodeChange,\n        required: true,\n        placeholder: \"Zip code\",\n        type: \"number\",\n        id: \"zipCode\",\n        name: \"zipCode\",\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Representative: \", representative.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Senators: \", senator1.name, \" and \", senator2.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(GetOfficialsByAddressForm, \"uPINOmX+0Mf/PodBnoOIxeDWnUU=\");\n_c = GetOfficialsByAddressForm;\n;\nexport default GetOfficialsByAddressForm;\nvar _c;\n$RefreshReg$(_c, \"GetOfficialsByAddressForm\");","map":{"version":3,"names":["useState","getCivicInfoOfficialsByAddress","getOpenSecretsCandidateIds","jsxDEV","_jsxDEV","Fragment","_Fragment","GetOfficialsByAddressForm","_s","representative","setRepresentative","senator1","setSenator1","senator2","setSenator2","representativeId","setRepresentativeId","officialsState","setOfficialsState","senator1Id","setSenator1Id","senator2Id","setSenator2Id","formData","setFormData","zipCode","handleSubmit","event","preventDefault","data","set","normalizedInput","state","console","log","officialsIds","name","setRepresentativeOpenSecretsId","RepresentativeOpenSecretsId","setSenator1OpenSecretsId","Senator1OpenSecretsId","setSenator2OpenSecretsId","Senator2OpenSecretsId","handleZipCodeChange","value","target","inputName","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","required","placeholder","type","id","className","_c","$RefreshReg$"],"sources":["/Users/dbrainy/dev/politick/src/GetOfficialsByAddressForm.js"],"sourcesContent":["import { useState } from 'react';\nimport { getCivicInfoOfficialsByAddress, getOpenSecretsCandidateIds } from './api'\n\nfunction GetOfficialsByAddressForm() {\n\n    const [representative, setRepresentative] = useState({});\n    const [senator1, setSenator1] = useState({});\n    const [senator2, setSenator2] = useState({});\n    const [representativeId, setRepresentativeId] = useState({});\n    const [officialsState, setOfficialsState] = useState({});\n    const [senator1Id, setSenator1Id] = useState({});\n    const [senator2Id, setSenator2Id] = useState({});\n    const [formData, setFormData] = useState({\n        zipCode: '',\n    });\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const data = await getCivicInfoOfficialsByAddress(formData.zipCode);\n        setRepresentative(data.representative);\n        setSenator1(data.senator1);\n        setSenator2(data.senator2);\n        set(data.normalizedInput.state);\n        console.log(data);\n\n        const officialsIds = await getOpenSecretsCandidateIds(\n            'CA',\n            representative.name,\n            senator1.name,\n            senator2.name\n        );\n        setRepresentativeOpenSecretsId(data.RepresentativeOpenSecretsId)\n        setSenator1OpenSecretsId(data.Senator1OpenSecretsId)\n        setSenator2OpenSecretsId(data.Senator2OpenSecretsId)\n\n    };\n\n\n    const handleZipCodeChange = (event) => {\n        const value = event.target.value;\n        const inputName = event.target.name;\n        setFormData({\n            ...formData,\n            [inputName]: value\n        });\n    }\n\n    return (\n        <>\n            <p>Enter your zip code:</p>\n            <form onSubmit={handleSubmit}>\n                <input onChange={handleZipCodeChange} required placeholder='Zip code' type='number' id='zipCode' name='zipCode' className='form-control' />\n                <button className=\"btn btn-primary\">Submit</button>\n            </form>\n            <ul>\n                <li>Representative: {representative.name}</li>\n                <li>Senators: {senator1.name} and {senator2.name}</li>\n            </ul>\n        </>\n    );\n};\n\nexport default GetOfficialsByAddressForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}