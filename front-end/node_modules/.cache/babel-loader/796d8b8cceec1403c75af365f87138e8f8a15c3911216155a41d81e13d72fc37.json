{"ast":null,"code":"import { PRO_PUBLICA_API_KEY } from '../apiKeys';\nconst getRepresentativeProPublicaInfo = async repName => {\n  const params = {\n    congress: 118,\n    chamber: 'house'\n  };\n  const apiUrl = `https://api.propublica.org/congress/v1/${params.congress}/${params.chamber}/members.json`;\n  const headers = new Headers({\n    'X-API-Key': PRO_PUBLICA_API_KEY\n  });\n  try {\n    const response = await fetch(apiUrl, {\n      headers: headers\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error. Status: ${response.status}`);\n    }\n    const data = await response.json();\n    console.log('proPublicaData:', data);\n    const [firstName, lastName] = repName.split(' ');\n    let filteredMembers = [];\n    for (let member of data.results[0].members) {\n      if (member.last_name.toLowerCase() === lastName.toLowerCase()) {\n        filteredMembers.push(member);\n      }\n    }\n    let matchingMember = null;\n    if (filteredMembers.length === 1) {\n      matchingMember = filteredMembers[0];\n    } else if (filteredMembers.length > 1) {\n      for (let member of filteredMembers) {\n        if (member.first_name.toLowerCase() === firstName.toLowerCase()) {\n          matchingMember = member;\n          break;\n        }\n      }\n    }\n    if (matchingMember) {\n      return matchingMember;\n    } else {\n      console.log(`No match found for ${firstName} ${lastName}`);\n      return null;\n    }\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    return {\n      district: '',\n      geoid: '',\n      crp_id: ''\n    };\n  }\n};\nexport { getRepresentativeProPublicaInfo };","map":{"version":3,"names":["PRO_PUBLICA_API_KEY","getRepresentativeProPublicaInfo","repName","params","congress","chamber","apiUrl","headers","Headers","response","fetch","ok","Error","status","data","json","console","log","firstName","lastName","split","filteredMembers","member","results","members","last_name","toLowerCase","push","matchingMember","length","first_name","error","district","geoid","crp_id"],"sources":["/Users/dbrainy/dev/politick/src/api/proPublicaApi.js"],"sourcesContent":["import { PRO_PUBLICA_API_KEY } from '../apiKeys';\n\n\nconst getRepresentativeProPublicaInfo = async (repName) => {\n\n    const params = {\n        congress: 118,\n        chamber: 'house',\n    }\n    const apiUrl = `https://api.propublica.org/congress/v1/${params.congress}/${params.chamber}/members.json`\n\n    const headers = new Headers({\n        'X-API-Key': PRO_PUBLICA_API_KEY,\n    });\n\n    try {\n        const response = await fetch(apiUrl, { headers: headers });\n        if (!response.ok) {\n            throw new Error(`HTTP error. Status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('proPublicaData:', data);\n\n        const [firstName, lastName] = repName.split(' ');\n\n        let filteredMembers = [];\n        for (let member of data.results[0].members) {\n            if (member.last_name.toLowerCase() === lastName.toLowerCase()) {\n                filteredMembers.push(member);\n            }\n        }\n\n        let matchingMember = null;\n\n        if (filteredMembers.length === 1) {\n            matchingMember = filteredMembers[0];\n        } else if (filteredMembers.length > 1) {\n            for (let member of filteredMembers) {\n                if (member.first_name.toLowerCase() === firstName.toLowerCase()) {\n                    matchingMember = member;\n                    break;\n                }\n            }\n        }\n\n        if (matchingMember) {\n\n            return matchingMember;\n\n        } else {\n            console.log(`No match found for ${firstName} ${lastName}`);\n            return null;\n        }\n    }\n\n    catch (error) {\n        console.error('Error fetching data:', error);\n        return {\n            district: '',\n            geoid: '',\n            crp_id: '',\n        }\n    }\n}\n\nexport { getRepresentativeProPublicaInfo };\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,YAAY;AAGhD,MAAMC,+BAA+B,GAAG,MAAOC,OAAO,IAAK;EAEvD,MAAMC,MAAM,GAAG;IACXC,QAAQ,EAAE,GAAG;IACbC,OAAO,EAAE;EACb,CAAC;EACD,MAAMC,MAAM,GAAI,0CAAyCH,MAAM,CAACC,QAAS,IAAGD,MAAM,CAACE,OAAQ,eAAc;EAEzG,MAAME,OAAO,GAAG,IAAIC,OAAO,CAAC;IACxB,WAAW,EAAER;EACjB,CAAC,CAAC;EAEF,IAAI;IACA,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAACJ,MAAM,EAAE;MAAEC,OAAO,EAAEA;IAAQ,CAAC,CAAC;IAC1D,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAE,uBAAsBH,QAAQ,CAACI,MAAO,EAAC,CAAC;IAC7D;IACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEH,IAAI,CAAC;IAEpC,MAAM,CAACI,SAAS,EAAEC,QAAQ,CAAC,GAAGjB,OAAO,CAACkB,KAAK,CAAC,GAAG,CAAC;IAEhD,IAAIC,eAAe,GAAG,EAAE;IACxB,KAAK,IAAIC,MAAM,IAAIR,IAAI,CAACS,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,EAAE;MACxC,IAAIF,MAAM,CAACG,SAAS,CAACC,WAAW,CAAC,CAAC,KAAKP,QAAQ,CAACO,WAAW,CAAC,CAAC,EAAE;QAC3DL,eAAe,CAACM,IAAI,CAACL,MAAM,CAAC;MAChC;IACJ;IAEA,IAAIM,cAAc,GAAG,IAAI;IAEzB,IAAIP,eAAe,CAACQ,MAAM,KAAK,CAAC,EAAE;MAC9BD,cAAc,GAAGP,eAAe,CAAC,CAAC,CAAC;IACvC,CAAC,MAAM,IAAIA,eAAe,CAACQ,MAAM,GAAG,CAAC,EAAE;MACnC,KAAK,IAAIP,MAAM,IAAID,eAAe,EAAE;QAChC,IAAIC,MAAM,CAACQ,UAAU,CAACJ,WAAW,CAAC,CAAC,KAAKR,SAAS,CAACQ,WAAW,CAAC,CAAC,EAAE;UAC7DE,cAAc,GAAGN,MAAM;UACvB;QACJ;MACJ;IACJ;IAEA,IAAIM,cAAc,EAAE;MAEhB,OAAOA,cAAc;IAEzB,CAAC,MAAM;MACHZ,OAAO,CAACC,GAAG,CAAE,sBAAqBC,SAAU,IAAGC,QAAS,EAAC,CAAC;MAC1D,OAAO,IAAI;IACf;EACJ,CAAC,CAED,OAAOY,KAAK,EAAE;IACVf,OAAO,CAACe,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAO;MACHC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE;IACZ,CAAC;EACL;AACJ,CAAC;AAED,SAASjC,+BAA+B"},"metadata":{},"sourceType":"module","externalDependencies":[]}