{"ast":null,"code":"var _jsxFileName = \"/Users/dbrainy/dev/politick/src/GetRepByAddressForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport getCivicInfoRepByAddress from './api/civicInfoApi';\nimport { getOpenSecretsRepId, getOpenSecretsCandidateContributions, getOpenSecretsCandidatePersonalFinances } from './api/openSecretsApi';\nimport { getRepresentativeProPublicaInfo } from './api/proPublicaApi';\nimport AddressForm from './components/AddressForm';\nimport RepresentativeInfo from './components/RepresentativeInfo';\nimport ContributionsTable from './components/ContributionsTable';\nimport CongressGovPhoto from './components/CongressGovPhoto';\nimport SponsoredBills from './components/SponsoredBills';\nimport { getCongressGovPhoto, getSponsoredBillInfo } from './api/congressApi';\nimport VotingInfo from './components/VotingInfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GetRepByAddressForm() {\n  _s();\n  const [isFormSubmitted, setIsFormSubmitted] = useState(false);\n  const [representativeInfo, setRepresentativeInfo] = useState({});\n  const [repContribData, setRepContribData] = useState({});\n  const [proPublicaInfo, setProPublicaInfo] = useState({});\n  const [sponsoredBills, setRepSponsoredBills] = useState({});\n  const [repPhoto, setRepPhoto] = useState({});\n  const handleFormSubmit = async formData => {\n    const address = `${formData.streetAddress} ${formData.city} ${formData.state} ${formData.zipCode}`;\n    const repData = await getCivicInfoRepByAddress(address);\n    setRepresentativeInfo(repData);\n    const repId = await getOpenSecretsRepId(repData.state, repData.representative.name);\n    const contribData = await getOpenSecretsCandidateContributions(repId.repId);\n    setRepContribData(contribData);\n    const proPubInfo = await getRepresentativeProPublicaInfo(repData.representative.name);\n    setProPublicaInfo(proPubInfo);\n    const congressGovPhoto = await getCongressGovPhoto(proPubInfo.id);\n    setRepPhoto(congressGovPhoto);\n    const sponsoredBillInfo = await getSponsoredBillInfo(proPubInfo.id);\n    setRepSponsoredBills(sponsoredBillInfo);\n    setIsFormSubmitted(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row min-vh-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4 d-flex align-items-center justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(AddressForm, {\n          onSubmit: handleFormSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-8 d-flex justify-content-center mt-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(GetRepByAddressForm, \"fU+1ePuSNbuo2oJUgsPTDNEBnb8=\");\n_c = GetRepByAddressForm;\nexport default GetRepByAddressForm;\nvar _c;\n$RefreshReg$(_c, \"GetRepByAddressForm\");","map":{"version":3,"names":["React","useState","getCivicInfoRepByAddress","getOpenSecretsRepId","getOpenSecretsCandidateContributions","getOpenSecretsCandidatePersonalFinances","getRepresentativeProPublicaInfo","AddressForm","RepresentativeInfo","ContributionsTable","CongressGovPhoto","SponsoredBills","getCongressGovPhoto","getSponsoredBillInfo","VotingInfo","jsxDEV","_jsxDEV","GetRepByAddressForm","_s","isFormSubmitted","setIsFormSubmitted","representativeInfo","setRepresentativeInfo","repContribData","setRepContribData","proPublicaInfo","setProPublicaInfo","sponsoredBills","setRepSponsoredBills","repPhoto","setRepPhoto","handleFormSubmit","formData","address","streetAddress","city","state","zipCode","repData","repId","representative","name","contribData","proPubInfo","congressGovPhoto","id","sponsoredBillInfo","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dbrainy/dev/politick/src/GetRepByAddressForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport getCivicInfoRepByAddress from './api/civicInfoApi';\nimport { getOpenSecretsRepId, getOpenSecretsCandidateContributions, getOpenSecretsCandidatePersonalFinances } from './api/openSecretsApi';\nimport { getRepresentativeProPublicaInfo } from './api/proPublicaApi';\nimport AddressForm from './components/AddressForm';\nimport RepresentativeInfo from './components/RepresentativeInfo';\nimport ContributionsTable from './components/ContributionsTable';\nimport CongressGovPhoto from './components/CongressGovPhoto';\nimport SponsoredBills from './components/SponsoredBills';\nimport { getCongressGovPhoto, getSponsoredBillInfo } from './api/congressApi';\nimport VotingInfo from './components/VotingInfo';\n\nfunction GetRepByAddressForm() {\n    const [isFormSubmitted, setIsFormSubmitted] = useState(false);\n    const [representativeInfo, setRepresentativeInfo] = useState({});\n    const [repContribData, setRepContribData] = useState({});\n    const [proPublicaInfo, setProPublicaInfo] = useState({});\n    const [sponsoredBills, setRepSponsoredBills] = useState({});\n\n    const [repPhoto, setRepPhoto] = useState({});\n\n    const handleFormSubmit = async (formData) => {\n\n        const address = `${formData.streetAddress} ${formData.city} ${formData.state} ${formData.zipCode}`;\n\n        const repData = await getCivicInfoRepByAddress(address);\n        setRepresentativeInfo(repData);\n\n        const repId = await getOpenSecretsRepId(repData.state, repData.representative.name);\n\n        const contribData = await getOpenSecretsCandidateContributions(repId.repId);\n        setRepContribData(contribData);\n\n        const proPubInfo = await getRepresentativeProPublicaInfo(repData.representative.name);\n        setProPublicaInfo(proPubInfo);\n\n        const congressGovPhoto = await getCongressGovPhoto(proPubInfo.id);\n        setRepPhoto(congressGovPhoto);\n\n        const sponsoredBillInfo = await getSponsoredBillInfo(proPubInfo.id);\n        setRepSponsoredBills(sponsoredBillInfo);\n\n        setIsFormSubmitted(true);\n    };\n\n    return (\n        <div className=\"container\">\n            <div className=\"row min-vh-100\">\n                <div className=\"col-4 d-flex align-items-center justify-content-center\">\n                    <AddressForm onSubmit={handleFormSubmit} />\n                </div>\n                <div className=\"col-8 d-flex justify-content-center mt-5\">\n                   \n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default GetRepByAddressForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}