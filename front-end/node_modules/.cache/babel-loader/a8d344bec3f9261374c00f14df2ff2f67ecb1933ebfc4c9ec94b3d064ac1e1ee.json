{"ast":null,"code":"const fetchData = async url => {\n  const response = await fetch(url);\n  if (!response.ok) {\n    throw new Error(`HTTP error. Status: ${response.status}`);\n  }\n  return response.json();\n};\nconst reshapeCivicInfoData = data => {\n  function extractDistrictNumber(inputString) {\n    const parts = inputString.split(\"cd:\");\n    return parts.length === 2 ? parseInt(parts[1], 10) : null;\n  }\n  return {\n    data: {\n      name: data.officials[0].name,\n      party: data.officials[0].party,\n      urls: data.officials[0].urls,\n      channels: data.officials[0].channels,\n      office: data.offices[0].name,\n      district: `${data.normalizedInput.state}-${extractDistrictNumber(data.offices[0].divisionId)}`,\n      state: data.normalizedInput.state\n    }\n  };\n};\nconst getCivicInfoRepByAddress = async address => {\n  try {\n    const data = await fetchData(`http://localhost:8000/api/representatives/${address}`);\n    return reshapeCivicInfoData(data);\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    return {\n      representative: {},\n      office: {},\n      state: ''\n    };\n  }\n};\nexport default getCivicInfoRepByAddress;","map":{"version":3,"names":["fetchData","url","response","fetch","ok","Error","status","json","reshapeCivicInfoData","data","extractDistrictNumber","inputString","parts","split","length","parseInt","name","officials","party","urls","channels","office","offices","district","normalizedInput","state","divisionId","getCivicInfoRepByAddress","address","error","console","representative"],"sources":["/Users/dbrainy/dev/politick/front-end/src/api/civicInfoApi.js"],"sourcesContent":["const fetchData = async (url) => {\n    const response = await fetch(url);\n    if (!response.ok) {\n        throw new Error(`HTTP error. Status: ${response.status}`);\n    }\n    return response.json();\n};\n\nconst reshapeCivicInfoData = (data) => {\n    function extractDistrictNumber(inputString) {\n        const parts = inputString.split(\"cd:\");\n        return parts.length === 2 ? parseInt(parts[1], 10) : null;\n    }\n\n    return {\n        data: {\n            name: data.officials[0].name,\n            party: data.officials[0].party,\n            urls: data.officials[0].urls,\n            channels: data.officials[0].channels,\n            office: data.offices[0].name,\n            district: `${data.normalizedInput.state}-${extractDistrictNumber(data.offices[0].divisionId)}`,\n            state: data.normalizedInput.state,\n        },\n    };\n};\n\nconst getCivicInfoRepByAddress = async (address) => {\n    try {\n        const data = await fetchData(`http://localhost:8000/api/representatives/${address}`);\n        return reshapeCivicInfoData(data);\n    } catch (error) {\n        console.error('Error fetching data:', error);\n        return { representative: {}, office: {}, state: '' };\n    }\n};\n\nexport default getCivicInfoRepByAddress;\n"],"mappings":"AAAA,MAAMA,SAAS,GAAG,MAAOC,GAAG,IAAK;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;EACjC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAE,uBAAsBH,QAAQ,CAACI,MAAO,EAAC,CAAC;EAC7D;EACA,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAAC;AAC1B,CAAC;AAED,MAAMC,oBAAoB,GAAIC,IAAI,IAAK;EACnC,SAASC,qBAAqBA,CAACC,WAAW,EAAE;IACxC,MAAMC,KAAK,GAAGD,WAAW,CAACE,KAAK,CAAC,KAAK,CAAC;IACtC,OAAOD,KAAK,CAACE,MAAM,KAAK,CAAC,GAAGC,QAAQ,CAACH,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI;EAC7D;EAEA,OAAO;IACHH,IAAI,EAAE;MACFO,IAAI,EAAEP,IAAI,CAACQ,SAAS,CAAC,CAAC,CAAC,CAACD,IAAI;MAC5BE,KAAK,EAAET,IAAI,CAACQ,SAAS,CAAC,CAAC,CAAC,CAACC,KAAK;MAC9BC,IAAI,EAAEV,IAAI,CAACQ,SAAS,CAAC,CAAC,CAAC,CAACE,IAAI;MAC5BC,QAAQ,EAAEX,IAAI,CAACQ,SAAS,CAAC,CAAC,CAAC,CAACG,QAAQ;MACpCC,MAAM,EAAEZ,IAAI,CAACa,OAAO,CAAC,CAAC,CAAC,CAACN,IAAI;MAC5BO,QAAQ,EAAG,GAAEd,IAAI,CAACe,eAAe,CAACC,KAAM,IAAGf,qBAAqB,CAACD,IAAI,CAACa,OAAO,CAAC,CAAC,CAAC,CAACI,UAAU,CAAE,EAAC;MAC9FD,KAAK,EAAEhB,IAAI,CAACe,eAAe,CAACC;IAChC;EACJ,CAAC;AACL,CAAC;AAED,MAAME,wBAAwB,GAAG,MAAOC,OAAO,IAAK;EAChD,IAAI;IACA,MAAMnB,IAAI,GAAG,MAAMT,SAAS,CAAE,6CAA4C4B,OAAQ,EAAC,CAAC;IACpF,OAAOpB,oBAAoB,CAACC,IAAI,CAAC;EACrC,CAAC,CAAC,OAAOoB,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAO;MAAEE,cAAc,EAAE,CAAC,CAAC;MAAEV,MAAM,EAAE,CAAC,CAAC;MAAEI,KAAK,EAAE;IAAG,CAAC;EACxD;AACJ,CAAC;AAED,eAAeE,wBAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}