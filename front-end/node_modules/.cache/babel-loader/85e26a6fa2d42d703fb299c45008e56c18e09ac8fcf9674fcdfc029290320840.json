{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport CIVIC_INFO_API_KEY from '/.apiKeys';\nfunction GetReps() {\n  _s();\n  const [federalReps, setFederalReps] = useState([]);\n  const getData = async () => {\n    const apiUrl = 'https://www.googleapis.com/civicinfo/v2/representatives';\n    const params = {\n      address: '94501',\n      includeOffices: true,\n      levels: 'country',\n      roles: ['legislatorLowerBody', 'legislatorUpperBody'],\n      key: CIVIC_INFO_API_KEY\n    };\n    const searchParams = new URLSearchParams(params);\n    const response = await fetch('apiUrl');\n    if (response.ok) {\n      const data = await response.json();\n      setFederalReps(data.federalReps);\n    } else {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  console.log(reps);\n  return \"hello world\";\n}\n_s(GetReps, \"IaXAB7v2qF52Ke0Gc0i+aUfKzpk=\");\n_c = GetReps;\n;\nexport default GetReps;\nvar _c;\n$RefreshReg$(_c, \"GetReps\");","map":{"version":3,"names":["useEffect","useState","CIVIC_INFO_API_KEY","GetReps","_s","federalReps","setFederalReps","getData","apiUrl","params","address","includeOffices","levels","roles","key","searchParams","URLSearchParams","response","fetch","ok","data","json","Error","status","console","log","reps","_c","$RefreshReg$"],"sources":["/Users/dbrainy/dev/politick/src/GetReps.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport CIVIC_INFO_API_KEY from '/.apiKeys';\n\nfunction GetReps() {\n\n    const [federalReps, setFederalReps] = useState([]);\n\n    const getData = async () => {\n\n        const apiUrl = 'https://www.googleapis.com/civicinfo/v2/representatives';\n        const params = {\n            address: '94501',\n            includeOffices: true,\n            levels: 'country',\n            roles: [\n                'legislatorLowerBody',\n                'legislatorUpperBody'\n            ],\n            key: CIVIC_INFO_API_KEY\n        };\n\n        const searchParams = new URLSearchParams(params);\n\n        const response = await fetch('apiUrl');\n\n        if (response.ok) {\n            const data = await response.json();\n            setFederalReps(data.federalReps);\n        }\n        else {\n            throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n\n    };\n\n    useEffect(() => {\n        getData()\n    }, []);\n\n    console.log(reps);\n\n    return (\n        \"hello world\"\n    );\n};\n\nexport default GetReps;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,kBAAkB,MAAM,WAAW;AAE1C,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAEf,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMM,OAAO,GAAG,MAAAA,CAAA,KAAY;IAExB,MAAMC,MAAM,GAAG,yDAAyD;IACxE,MAAMC,MAAM,GAAG;MACXC,OAAO,EAAE,OAAO;MAChBC,cAAc,EAAE,IAAI;MACpBC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,CACH,qBAAqB,EACrB,qBAAqB,CACxB;MACDC,GAAG,EAAEZ;IACT,CAAC;IAED,MAAMa,YAAY,GAAG,IAAIC,eAAe,CAACP,MAAM,CAAC;IAEhD,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,QAAQ,CAAC;IAEtC,IAAID,QAAQ,CAACE,EAAE,EAAE;MACb,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClCf,cAAc,CAACc,IAAI,CAACf,WAAW,CAAC;IACpC,CAAC,MACI;MACD,MAAM,IAAIiB,KAAK,CAAE,uBAAsBL,QAAQ,CAACM,MAAO,EAAC,CAAC;IAC7D;EAEJ,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACZO,OAAO,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAENiB,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC;EAEjB,OACI,aAAa;AAErB;AAACtB,EAAA,CAzCQD,OAAO;AAAAwB,EAAA,GAAPxB,OAAO;AAyCf;AAED,eAAeA,OAAO;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}