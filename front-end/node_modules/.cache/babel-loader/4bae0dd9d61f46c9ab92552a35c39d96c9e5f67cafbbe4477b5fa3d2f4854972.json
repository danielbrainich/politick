{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport CIVIC_INFO_API_KEY from './apiKeys';\nfunction GetFederalReps() {\n  _s();\n  const [federalReps, setFederalReps] = useState([]);\n  const getData = async () => {\n    const apiUrl = 'https://www.googleapis.com/civicinfo/v2/representatives';\n    const params = {\n      address: '94501',\n      includeOffices: true,\n      levels: 'country',\n      key: CIVIC_INFO_API_KEY\n    };\n    const searchParams = new URLSearchParams(params);\n    const urlWithParams = `${apiUrl}?${searchParams.toString()}`;\n    try {\n      const response = await fetch(urlWithParams);\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setFederalReps(data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  console.log(federalReps);\n}\n_s(GetFederalReps, \"IaXAB7v2qF52Ke0Gc0i+aUfKzpk=\");\n_c = GetFederalReps;\n;\nexport default GetFederalReps;\nvar _c;\n$RefreshReg$(_c, \"GetFederalReps\");","map":{"version":3,"names":["useEffect","useState","CIVIC_INFO_API_KEY","GetFederalReps","_s","federalReps","setFederalReps","getData","apiUrl","params","address","includeOffices","levels","key","searchParams","URLSearchParams","urlWithParams","toString","response","fetch","ok","Error","status","data","json","error","console","log","_c","$RefreshReg$"],"sources":["/Users/dbrainy/dev/politick/src/GetReps.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport CIVIC_INFO_API_KEY from './apiKeys';\n\nfunction GetFederalReps() {\n\n    const [federalReps, setFederalReps] = useState([]);\n\n    const getData = async () => {\n\n        const apiUrl = 'https://www.googleapis.com/civicinfo/v2/representatives';\n        const params = {\n            address: '94501',\n            includeOffices: true,\n            levels: 'country',\n            key: CIVIC_INFO_API_KEY,\n        };\n\n        const searchParams = new URLSearchParams(params);\n        const urlWithParams = `${apiUrl}?${searchParams.toString()}`;\n\n        try {\n            const response = await fetch(urlWithParams);\n            if (!response.ok) {\n                throw new Error(`HTTP error! Status: ${response.status}`);\n            }\n            const data = await response.json();\n            setFederalReps(data);\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n\n    };\n\n    useEffect(() => {\n        getData()\n    }, []);\n\n    console.log(federalReps);\n\n};\n\nexport default GetFederalReps;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,kBAAkB,MAAM,WAAW;AAE1C,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAEtB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMM,OAAO,GAAG,MAAAA,CAAA,KAAY;IAExB,MAAMC,MAAM,GAAG,yDAAyD;IACxE,MAAMC,MAAM,GAAG;MACXC,OAAO,EAAE,OAAO;MAChBC,cAAc,EAAE,IAAI;MACpBC,MAAM,EAAE,SAAS;MACjBC,GAAG,EAAEX;IACT,CAAC;IAED,MAAMY,YAAY,GAAG,IAAIC,eAAe,CAACN,MAAM,CAAC;IAChD,MAAMO,aAAa,GAAI,GAAER,MAAO,IAAGM,YAAY,CAACG,QAAQ,CAAC,CAAE,EAAC;IAE5D,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,aAAa,CAAC;MAC3C,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAE,uBAAsBH,QAAQ,CAACI,MAAO,EAAC,CAAC;MAC7D;MACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClClB,cAAc,CAACiB,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EAEJ,CAAC;EAEDzB,SAAS,CAAC,MAAM;IACZO,OAAO,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAENmB,OAAO,CAACC,GAAG,CAACtB,WAAW,CAAC;AAE5B;AAACD,EAAA,CApCQD,cAAc;AAAAyB,EAAA,GAAdzB,cAAc;AAoCtB;AAED,eAAeA,cAAc;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}