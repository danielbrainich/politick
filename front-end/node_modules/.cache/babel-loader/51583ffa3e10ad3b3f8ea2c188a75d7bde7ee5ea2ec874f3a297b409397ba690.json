{"ast":null,"code":"var _jsxFileName = \"/Users/dbrainy/dev/politick/front-end/src/components/RepresentativeInfo.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RepresentativeInfo({\n  props\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: repInfo.representative && repInfo.office && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card-title\",\n          children: repInfo.representative.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: repInfo.office.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: repInfo.representative.party\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: repInfo.office.district\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 25\n        }, this), repInfo.representative.channels && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: repInfo.representative.channels.map((channel, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: [channel.type, \": \", channel.id]\n          }, `channel-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 9\n  }, this);\n}\n_c = RepresentativeInfo;\nexport default RepresentativeInfo;\nvar _c;\n$RefreshReg$(_c, \"RepresentativeInfo\");","map":{"version":3,"names":["RepresentativeInfo","props","_jsxDEV","className","children","repInfo","representative","office","name","fileName","_jsxFileName","lineNumber","columnNumber","party","district","channels","map","channel","index","type","id","_c","$RefreshReg$"],"sources":["/Users/dbrainy/dev/politick/front-end/src/components/RepresentativeInfo.js"],"sourcesContent":["\nfunction RepresentativeInfo({ props }) {\n    return (\n        <div className=\"card\">\n            <div className=\"card-body\">\n                {repInfo.representative && repInfo.office && (\n                    <div>\n                        <h2 className=\"card-title\">{repInfo.representative.name}</h2>\n                        <p className=\"card-text\">{repInfo.office.name}</p>\n                        <p className=\"card-text\">{repInfo.representative.party}</p>\n                        <p className=\"card-text\">{repInfo.office.district}</p>\n                        {repInfo.representative.channels && (\n                            <div>\n                                {repInfo.representative.channels.map((channel, index) => (\n                                    <p className=\"card-text\" key={`channel-${index}`}>\n                                        {channel.type}: {channel.id}\n                                    </p>\n                                ))}\n                            </div>\n                        )}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default RepresentativeInfo;\n"],"mappings":";;AACA,SAASA,kBAAkBA,CAAC;EAAEC;AAAM,CAAC,EAAE;EACnC,oBACIC,OAAA;IAAKC,SAAS,EAAC,MAAM;IAAAC,QAAA,eACjBF,OAAA;MAAKC,SAAS,EAAC,WAAW;MAAAC,QAAA,EACrBC,OAAO,CAACC,cAAc,IAAID,OAAO,CAACE,MAAM,iBACrCL,OAAA;QAAAE,QAAA,gBACIF,OAAA;UAAIC,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAEC,OAAO,CAACC,cAAc,CAACE;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC7DV,OAAA;UAAGC,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAEC,OAAO,CAACE,MAAM,CAACC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClDV,OAAA;UAAGC,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAEC,OAAO,CAACC,cAAc,CAACO;QAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3DV,OAAA;UAAGC,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAEC,OAAO,CAACE,MAAM,CAACO;QAAQ;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACrDP,OAAO,CAACC,cAAc,CAACS,QAAQ,iBAC5Bb,OAAA;UAAAE,QAAA,EACKC,OAAO,CAACC,cAAc,CAACS,QAAQ,CAACC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAChDhB,OAAA;YAAGC,SAAS,EAAC,WAAW;YAAAC,QAAA,GACnBa,OAAO,CAACE,IAAI,EAAC,IAAE,EAACF,OAAO,CAACG,EAAE;UAAA,GADA,WAAUF,KAAM,EAAC;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAE7C,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CACR;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IACR;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACS,EAAA,GAxBQrB,kBAAkB;AA0B3B,eAAeA,kBAAkB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}